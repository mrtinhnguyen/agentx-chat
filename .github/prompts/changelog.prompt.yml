modelParameters:
  max_completion_tokens: 16555
  temperature: 1
  top_p: 1
  stop: []
  frequency_penalty: 0
  presence_penalty: 0
model: openai/gpt-4.1-mini
messages:
  - role: system
    content: >-
      You are a QA engineer responsible for summarizing PRs and updating the
      changelog
  - role: user
    content: >-
      (base) alexp@dev:~/src/OpenChat$ git diff
      64e4995f379851951d810a1c04445b2d1347d163

      diff --git a/.github/workflows/pr-policy.yml
      b/.github/workflows/pr-policy.yml

      new file mode 100644

      index 0000000..edf8054

      --- /dev/null

      +++ b/.github/workflows/pr-policy.yml

      @@ -0,0 +1,55 @@

      :...skipping...

      diff --git a/.github/workflows/pr-policy.yml
      b/.github/workflows/pr-policy.yml

      new file mode 100644

      index 0000000..edf8054

      --- /dev/null

      +++ b/.github/workflows/pr-policy.yml

      @@ -0,0 +1,55 @@

      +name: PR policy - version and changelog

      +

      +on:

      +  pull_request:

      +    branches: [ "main" ]

      +    types: [ opened, synchronize, reopened, ready_for_review ]

      +

      +jobs:

      +  verify:

      +    if: github.event.pull_request.draft == false

      +    runs-on: ubuntu-latest

      +    steps:

      +      - name: Check out code

      +        uses: actions/checkout@v4

      +        with:

      +          fetch-depth: 0

      +

      +      - name: Set base and head SHAs

      +        run: |

      +          echo "BASE_SHA=${{ github.event.pull_request.base.sha }}" >>
      $GITHUB_ENV

      +          echo "HEAD_SHA=${{ github.sha }}" >> $GITHUB_ENV

      +

      +      - name: Require CHANGELOG.md to be modified

      +        run: |

      +          if ! git diff --name-only "$BASE_SHA" "$HEAD_SHA" | grep -xq
      "CHANGELOG.md"; then

      +            echo "CHANGELOG.md must be updated in this PR (not found in
      diff)."

      +            exit 1

      +          fi

      +

      +      - name: Require package.json version to be bumped

      +        run: |

      +          if ! test -f package.json; then

      +            echo "package.json not found at repo root."

      +            exit 1

      +          fi

      +          BASE_VERSION=$(git show "$BASE_SHA:package.json" 2>/dev/null |
      jq -r '.version // empty')

      +          HEAD_VERSION=$(jq -r '.version // empty' package.json)

      +          if [ -z "$BASE_VERSION" ] || [ -z "$HEAD_VERSION" ]; then

      +            echo "Could not read version from package.json
      (base=$BASE_VERSION, head=$HEAD_VERSION)."

      +            exit 1

      +          fi

      +          if [ "$BASE_VERSION" = "$HEAD_VERSION" ]; then

      +            echo "package.json version must be bumped
      (base=$BASE_VERSION, head=$HEAD_VERSION)."

      +            exit 1

      +          fi

      +          echo "Version bumped: $BASE_VERSION -> $HEAD_VERSION"

      +

      +      - name: Ensure package.json is part of the diff

      +        run: |

      +          if ! git diff --name-only "$BASE_SHA" "$HEAD_SHA" | grep -xq
      "package.json"; then

      +            echo "package.json must be part of the PR changes."

      +            exit 1

      +          fi

      +

      +

      diff --git a/.gitignore b/.gitignore

      index 6e46ddb..bf08246 100644

      --- a/.gitignore

      +++ b/.gitignore

      @@ -57,3 +57,7 @@ node_modules/
       /blob-report/
       /playwright/.cache/
       /playwright/.auth/
      +

      +# editor folders

      +.cursor/

      +.vscode/

      diff --git a/Dockerfile b/Dockerfile

      index f5e5cd5..e61d3ff 100644

      --- a/Dockerfile

      +++ b/Dockerfile

      @@ -6,19 +6,21 @@ FROM node:${NODE_VERSION}-bookworm-slim AS base
       WORKDIR /app
       ENV NODE_ENV=production
       RUN corepack enable
      +RUN apt-get update -y && apt-get install -y openssl && rm -rf
      /var/lib/apt/lists/*
       
       FROM base AS deps
       # Install dependencies (use lockfile if present)
       COPY package.json pnpm-lock.yaml* ./
       RUN pnpm install --frozen-lockfile
      +COPY prisma ./prisma

      +# Generate Prisma Client early so it is cached with node_modules

      +ENV DB=sqlite

      +ENV SQLITE_URL=file:./prisma/dev.db

      +RUN pnpm exec prisma generate --schema prisma/schema.sqlite.prisma
       
       FROM base AS builder
       COPY --from=deps /app/node_modules ./node_modules
       COPY . .
      -# Ensure Prisma client is generated against the correct schema

      -ENV DB=sqlite

      -ENV SQLITE_URL=file:./prisma/dev.db

      -RUN pnpm run prisma:gen
       # Build Next.js
       RUN pnpm run build
       
      diff --git a/docker-compose.yml b/docker-compose.yml

      index f95178c..674fdd0 100644

      --- a/docker-compose.yml

      +++ b/docker-compose.yml

      @@ -1,29 +1,22 @@
       services:
         openchat:
      -    build:

      -      context: .

      -      dockerfile: Dockerfile

      -    image: openchat-web:latest

      +    image: openchatui/openchatui:latest
           ports:
             - "3000:3000"
      -    # environment:

      -      # NEXTAUTH_SECRET: "your-secret-here"              # Default:
      auto-generated

      -      # NEXTAUTH_URL: "https://your-domain.com"          # Default:
      http://localhost:3000

      -      # AUTH_TRUST_HOST: "true"                          # Default: true

      -      # DB: "sqlite"                                     # Default:
      sqlite (options: sqlite, postgres)

      -      # SQLITE_URL: "file:/prisma/dev.db"                # Default:
      file:/prisma/dev.db

      -      # DATABASE_URL: "postgresql://user:pass@host/db"   # For PostgreSQL
      (when DB=postgres)  

      -      # NODE_ENV: "production"                           # Default:
      production

      -      # PORT: "3000"                                     # Default: 3000

      -      # HOSTNAME: "0.0.0.0"                              # Default:
      0.0.0.0

      -      # OPENAI_API_KEY: "sk-..."

      -      # ANTHROPIC_API_KEY: "sk-ant-..."

      -      # DRIVE_CLIENT_ID: "your-google-client-id"

      -      # DRIVE_CLIENT_SECRET: "your-google-client-secret"

      +    #environment:

      +    #  NEXTAUTH_SECRET: "your-secret-here"              # Default:
      auto-generated

      +    #  NEXTAUTH_URL: "https://your-domain.com"          # Default:
      http://localhost:3000

      +    #  AUTH_TRUST_HOST: "true"                          # Default: true

      +    #  DB: "sqlite"                                     # Default: sqlite
      (options: sqlite, postgres)

      +    #  SQLITE_URL: "file:/prisma/dev.db"                # Default:
      file:/prisma/dev.db

      +    #  DATABASE_URL: "postgresql://user:pass@host/db"   # For PostgreSQL
      (when DB=postgres)  

      +    #  NODE_ENV: "production"                           # Default:
      production

      +    #  PORT: "3000"                                     # Default: 3000

      +    #  HOSTNAME: "0.0.0.0"                              # Default:
      0.0.0.0

      +    #  OPENAI_API_KEY: "sk-..."

      +    #  ANTHROPIC_API_KEY: "sk-ant-..."

      +    #  DRIVE_CLIENT_ID: "your-google-client-id"

      +    #  DRIVE_CLIENT_SECRET: "your-google-client-secret"
           volumes:
      -      - sqlite-data:/prisma

      +      - ./data/prisma:/prisma
           restart: unless-stopped
      -

      -volumes:

      -  sqlite-data:

      -    driver: local

      diff --git a/package.json b/package.json

      index c14b737..2f3c5a5 100644

      --- a/package.json

      +++ b/package.json

      @@ -1,6 +1,6 @@
       {
         "name": "openchatui",
      -  "version": "0.1.0",

      +  "version": "0.1.1",
         "private": true,
         "scripts": {
           "dev": "next dev",
